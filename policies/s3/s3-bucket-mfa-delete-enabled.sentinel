# This policy requires S3 buckets to have MFA delete enabled

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports
import "tfconfig/v2" as tfconfig

# Constants
const = {
	"resource_awscc_s3_bucket": "awscc_s3_bucket",
	"versioning":               "versioning",
	"mfa_delete":               "mfa_delete",
	"constant_value":           "constant_value",
}

# Get all S3 bucket resources
allS3Buckets = filter tfconfig.resources as address, r {
	r.type is const.resource_awscc_s3_bucket
}

# Find violations - S3 buckets without MFA delete enabled
violations = []

for allS3Buckets as address, bucket {
	bucket_config = bucket.config

	# Check if versioning is set
	if bucket_config[const.versioning] else null is null {
		append(violations, bucket)
	} else {
		versioning = bucket_config[const.versioning]

		# Check if mfa_delete is set to Enabled
		if versioning[const.mfa_delete] else null is null {
			append(violations, bucket)
		} else {
			mfa_delete = versioning[const.mfa_delete][const.constant_value]

			if mfa_delete is not "Enabled" {
				append(violations, bucket)
			}
		}
	}
}

# Print violations for debugging
if length(violations) > 0 {
	print("S3 buckets without MFA delete enabled:")
	for violations as _, v {
		print("  *", v.address)
	}
}

# Rules
main = rule {
	length(violations) is 0
}
