# This policy requires resources of type `awscc_sns_topic` to have encryption at rest enabled using AWS KMS.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfconfig/v2" as tfconfig
import "strings"

# Constants

const = {
	"policy_name":              "sns-encryption-at-rest-enabled",
	"message":                  "SNS topics should be encrypted at rest using AWS KMS. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-sns-1 for more details.",
	"resource_awscc_sns_topic": "awscc_sns_topic",
	"kms_master_key_id":        "kms_master_key_id",
	"constant_value":           "constant_value",
}

# Get all SNS topic resources
allSNSTopics = filter tfconfig.resources as address, r {
	r.type is const.resource_awscc_sns_topic
}

# Find violations - SNS topics without encryption at rest
violations = []

for allSNSTopics as address, topic {
	topic_config = topic.config

	# Check if KMS master key ID is set
	if topic_config[const.kms_master_key_id] else null is null {
		append(violations, topic)
	} else {
		# Check if KMS key ID is not empty
		kms_key_attr = topic_config[const.kms_master_key_id]
		if kms_key_attr[const.constant_value] else "" is "" {
			append(violations, topic)
		}
	}
}

# Print violations for debugging
if length(violations) > 0 {
	print("SNS topics without encryption at rest enabled:")
	for violations as _, v {
		print("  *", v.address)
	}
}

# Rules
main = rule {
	length(violations) is 0
}
